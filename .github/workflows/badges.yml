name: Package badges

on:
  push:
    branches: main

jobs:
  generate-badges:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install

      - name: Run Jest with coverage
        run: npm run coverage

      - name: Generate badge data
        id: generate-badge-data
        run: npm run generate-badge-data > $GITHUB_OUTPUT

      - name: Update Coverage
        id: read-output
        run: |
          echo "COVERAGE_LABEL=$(cat $GITHUB_OUTPUT | grep coverage-label | cut -d '=' -f2)" >> $GITHUB_ENV
          echo "COVERAGE_MESSAGE=$(cat $GITHUB_OUTPUT | grep coverage-message | cut -d '=' -f2)" >> $GITHUB_ENV
          echo "COVERAGE_COLOR=$(cat $GITHUB_OUTPUT | grep coverage-color | cut -d '=' -f2)" >> $GITHUB_ENV

      - name: Check NPM dependencies
        run: |
          if npm outdated; then
            echo "DEPENDENCIES_STATUS=outdated" >> $GITHUB_ENV
          else
            echo "DEPENDENCIES_STATUS=up-to-date" >> $GITHUB_ENV
          fi

      - name: Get current release version
        run: echo "RELEASE_VERSION=$(node -p -e "require('./package.json').version")" >> $GITHUB_ENV

      - name: Create Coverage Badge
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: ${{ secrets.GIST_ID }}
          filename: coverage-badge.svg
          label: ${{ env.COVERAGE_LABEL }}
          message: ${{ env.COVERAGE_MESSAGE }}
          color: ${{ env.COVERAGE_COLOR }}

      - name: Create Dependencies Status Badge
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: ${{ secrets.GIST_ID }}
          filename: dependencies-status-badge.svg
          label: Dependencies
          message: ${{ env.DEPENDENCIES_STATUS }}
          color: ${{ env.DEPENDENCIES_STATUS == 'up-to-date' && 'green' || 'red' }}

      - name: Create Release Version Badge
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: ${{ secrets.GIST_ID }}
          filename: release-version-badge.svg
          label: Release
          message: ${{ env.RELEASE_VERSION }}
          color: blue

      # Add steps to publish the package and badge if necessary
